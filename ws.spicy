# Simple parser for the WebSockets protocol
#
#  tested with:
#  printf "\x81\x17" | spicy-driver ws.spicy

module WS;

import Spicy;

export type Message = unit {
        first2B: bitfield(16) {
                fin: 0;
                rsv1: 1;
                rsv2: 2;
                rsv3: 3;
                op: 4..7;
                mask: 8;
                pay1: 9..15;
        } &bitorder = Spicy::BitOrder::MSB0;

        switch ( self.first2B.pay1 ) {
                126 -> extpay: ExtPay;
                127 -> extpayc: ExtPayC;
                * -> normpay: NormPay;
        };

        on %done {
                print self;
        }

};


type ExtPay = unit {
        pay2: uint<16>;
        data: bytes &eod;
};

type ExtPayC = unit {
        pay3: uint<64>;
        data: bytes &eod;
};

type NormPay = unit {
        data: bytes &eod;

        on %done {
                print self;
        }
};